# The GP regressor used for interpolating the posterior, with options
gpr:
  kernel: "RBF"  # e.g. "RBF", "Matern", {Matern: {nu: 2.5}}, ...
  noise_level: 1e-2
  optimizer: "fmin_l_bfgs_b"
  n_restarts_optimizer:  # default (undefined) is 10 + 2 * dim
  account_for_inf: "SVM"  # Undefined or null for not using an SVM classificator
  verbose:  # set only if you want different verbosity for the GPR

# Acquisition class. Can pass an instance too
gp_acquisition: "LogExp"
# TODO: acquisition object args (e.g. zeta)

# Proposer used for drawing the initial training samples before running the aquisition
# loop. Can pass instance too.
initial_proposer: "reference"  # or prior, or uniform (within prior bounds)
# TODO: initial proposer args

# The convergence criterion. Can pass instance too
convergence_criterion: "CorrectCounter"

# Convergence criterion args
convergence_options:
# TODO: maybe rename to _args

# Options regarding the bayesian optimization loop.
options: {}
    # Number of inite initial truth evaluations before starting the acq loop.
    ## "n_initial": None,  # default: 3 times the dimensionality.
    # Maximum number of truth evaluations at initialization. If it
    # is reached before `n_initial` finite points have been found, the run will fail.
    ##"max_initial": None,  # default: 10 times the dimensionality times n_initial
    # Number of points aquired with Kriging believer at every acquisition step
    ##"n_points_per_acq": None,  # default: number of parallel MPI processes
    # Maximum number of attempted sampling points before the run fails.
    ##"max_total": None,  # default: 70 times the dimentionality ^1.5
    # Maximum number of points accepted into the GP training set before the run fails.
    ##"max_finite": None,  # default: value of max_total
    # Scaling of the :math:`\zeta` parameter in the exponential acquisition function
    # with the number of dimensions :math:`\zeta=1/d^-scaling`
    ##"zeta_scaling": None,  # default: 0.85

# Cobaya sampler used to generate the final sample from the surrogate model
mc_sampler: "mcmc"  # default: mcmc with Cobaya defaults

# Produce progress plots (inside the gpry_output dir).
# Adds overhead for very fast likelihoods.
plots: False

# Function run each iteration after adapting the recently acquired points and
# the computation of the convergence criterion. See docs for implementation.
callback:

# Whether the callback function handles MPI-parallelization internally.
# Otherwise run only by the rank-0 process
callback_is_MPI_aware:

# Change to increase or reduce verbosity. If None, it is handled by Cobaya.
# '3' produces general progress output (default for Cobaya if None),
# and '4' debug-level output
verbose:
